(()=>{"use strict";class e{getData(e){const t=localStorage.getItem(e);return t?JSON.parse(t):null}saveData(e,t){localStorage.setItem(e,JSON.stringify(t))}}const t=[{levelNumber:1,elements:[{tag:"envelope",isCorrectAnswer:!0},{tag:"envelope",isCorrectAnswer:!0}],task:"Select the envelopes",description:{levelTitle:"Type Selector",brief:"Select elements by their type",syntax:"A",taskDescription:"Selects all elements of type A. Type refers to the type of tag, so div, p and ul are all different element types.",example:"<p class='syntax'> div </p> selects all <p class='syntax'> div </p> elements."}},{levelNumber:2,elements:[{tag:"envelope"},{tag:"parcel",isCorrectAnswer:!0},{tag:"envelope"}],task:"Select the parcel",description:{levelTitle:"Type Selector",brief:"Select elements by their type",syntax:"B",taskDescription:"Selects all elements of type A. Type refers to the type of tag, so div, p and ul are all different element types.",example:"<p class='syntax'> div </p>  selects all <p class='syntax'> div </p> elements."}},{levelNumber:3,elements:[{tag:"envelope"},{tag:"parcel"},{tag:"envelope",child:{tag:"stamp",isCorrectAnswer:!0}}],task:"Select the stamp on an envelope",description:{levelTitle:"Descendant Selector",brief:"Select an element inside another element",syntax:"A B",taskDescription:"Selects all B inside of A. B is called a descendant because it is inside of another element.",example:"<p class='syntax'> p strong </p>  selects all <p class='syntax'> &lt;strong&gt; </p> elements  that are inside of any <p class='syntax'> &lt;p&gt; </p>"}},{levelNumber:4,elements:[{tag:"parcel"},{tag:"parcel",id:"seal",isCorrectAnswer:!0},{tag:"envelope"}],task:"Select the parcel with id seal",description:{levelTitle:"ID Selector",brief:"Select elements with an ID",syntax:"#id",taskDescription:"Selects the element with a specific id. You can also combine the ID selector with the type selector.",example:"<p class='syntax'> #cool </p> selects any element with <p class='syntax'> id='cool' </p>"}},{levelNumber:5,elements:[{tag:"envelope",className:"opened",isCorrectAnswer:!0},{tag:"parcel"},{tag:"envelope"},{tag:"envelope",className:"opened",isCorrectAnswer:!0}],task:"Select opened envelope",description:{levelTitle:"Select elements by their class",brief:"Select an element inside another element",syntax:".classname",taskDescription:"The class selector selects all elements with that class attribute. Elements can only have one ID, but many classes.",example:"<p class='syntax'> .neato </p> selects all elements with <p class='syntax'> class='neato' </p>"}},{levelNumber:6,elements:[{tag:"parcel"},{tag:"envelope",id:"seal",isCorrectAnswer:!0},{tag:"parcel",id:"seal"},{tag:"envelope"}],task:"Select envelope with id seal",description:{levelTitle:"Combine the ID Selector",brief:"",syntax:"A#ID",taskDescription:"You can combine the class selector with other selectors, like the type selector.",example:"<p class='syntax'> element#big </p> selects all elements with <p class='syntax'> id='big' </p>"}},{levelNumber:7,elements:[{tag:"envelope"},{tag:"envelope",className:"opened",child:{tag:"stamp",isCorrectAnswer:!0}},{tag:"parcel"},{tag:"envelope",className:"opened"}],task:"Select stamp inside opened envelope",description:{levelTitle:"Descendant Selector",brief:"Select an element inside another element with classname",syntax:"A.classname B",taskDescription:"Selects all B inside A with classname.",example:"<p class='syntax'> p.big strong </p>  selects all <p class='syntax'> &lt;strong&gt; </p> elements that are inside of any <p class='syntax'> &lt;p&gt; </p> with class <p class='syntax'> big </p>"}},{levelNumber:8,elements:[{tag:"stamp",isCorrectAnswer:!0},{tag:"envelope",child:{tag:"stamp",isCorrectAnswer:!0}},{tag:"parcel",child:{tag:"seal",isCorrectAnswer:!0}},{tag:"envelope",child:{tag:"seal",isCorrectAnswer:!0}}],task:"Select all the stamps and seals",description:{levelTitle:"Comma Combinator",brief:"Combine, selectors, with... commas!",syntax:"A, B",taskDescription:"Thanks to Shatner technology, this selects all A and B elements. You can combine any selectors this way, and you can specify more than two.",example:"<p class='syntax'> a, p, div </p> selects all <p class='syntax'> a </p>, <p class='syntax'> p </p> and <p class='syntax'> div </p> elements"}},{levelNumber:9,elements:[{tag:"stamp",isCorrectAnswer:!0},{tag:"envelope",isCorrectAnswer:!0},{tag:"parcel",isCorrectAnswer:!0},{tag:"envelope",className:"opened",isCorrectAnswer:!0}],task:"Select all the things!",description:{levelTitle:"The Universal Selector",brief:"You can select everything!",syntax:"*",taskDescription:"You can select all elements with the universal selector!",example:"<p class='syntax'> p * </p> selects any element inside all <p class='syntax'> p </p> elements."}},{levelNumber:10,elements:[{tag:"envelope",child:{tag:"stamp",isCorrectAnswer:!0}},{tag:"parcel"},{tag:"envelope",child:{tag:"seal",isCorrectAnswer:!0}},{tag:"parcel",child:{tag:"seal"}}],task:"Select everything on an envelope!",description:{levelTitle:"Combine the Universal Selector",brief:"This selects all elements inside of A.",syntax:"A *",taskDescription:"This selects all elements inside of A.",example:"<p class='syntax'> p * </p> selects any element inside all <p class='syntax'> p </p> elements."}}];var s;!function(e){e.CURRENTLEVELKEY="currentLevel",e.COMPLETEDLEVELSKEY="completedLevels"}(s||(s={}));class l extends e{constructor(){super(...arguments),this.DATAKEYS=s,this.currentLevelNumber=this.getCurrentLevelNumber(),this.currentLevel=t[this.currentLevelNumber],this.levels=t,this.completedLevels=this.getCompletedLevels()}resetProgress(){this.currentLevelNumber=0,this.currentLevel=this.levels[this.currentLevelNumber],this.completedLevels=[]}getCurrentLevelNumber(){return this.getData(this.DATAKEYS.CURRENTLEVELKEY)||0}getCompletedLevels(){return this.getData(this.DATAKEYS.COMPLETEDLEVELSKEY)||[]}saveOptions(){this.saveData(this.DATAKEYS.CURRENTLEVELKEY,this.currentLevelNumber),this.saveData(this.DATAKEYS.COMPLETEDLEVELSKEY,this.completedLevels)}}class n{constructor(){this.store=new l}getCurrentLevel(){return this.store.currentLevel}getLevels(){return this.store.levels}getCompletedLevels(){return this.store.completedLevels}prevLevel(){return this.store.currentLevelNumber>0&&(this.store.currentLevel=this.store.levels[--this.store.currentLevelNumber]),this.store.currentLevel}nextLevel(){return this.store.currentLevelNumber<this.store.levels.length-1&&(this.store.currentLevel=this.store.levels[++this.store.currentLevelNumber]),this.store.currentLevel}changeLevel(e){return e>=0&&e<this.store.levels.length&&(this.store.currentLevelNumber=e,this.store.currentLevel=this.store.levels[this.store.currentLevelNumber]),this.store.currentLevel}levelCompleted(){return this.store.completedLevels.includes(this.store.currentLevelNumber)||(this.store.completedLevels.push(this.store.currentLevelNumber),this.store.completedLevels.length!==this.store.levels.length)?this.nextLevel():"You completed all levels!!!"}resetProgress(){return this.store.resetProgress(),this.getCurrentLevel()}saveLevelOptions(){this.store.saveOptions()}}const i=e=>{const t=document.createElement(e.tag);return e.classNames&&t.classList.add(...e.classNames),t.id=e.id?e.id:"",t.textContent=e.text?e.text:"",t},a=(e,t,s=1e3)=>{e.classList.add(t),setTimeout((()=>e.classList.remove(t)),s)},r=(e,t,s=1e3)=>{e.forEach((e=>a(e,t,s)))},o=(e,t)=>e.target.closest(`.${t}`),c=(e,t)=>{const s=o(e,t);s&&document.querySelectorAll(`[number="${s.getAttribute("number")}"]`).forEach((e=>{e.classList.toggle("hovered")}))};class p{constructor(e,t){this.levelRequirementHeader=document.querySelector(".level-requirement"),this.numberNode=document.getElementById("current-level"),this.levelsAmountNode=document.getElementById("levels-amount"),this.levelInfoWrapper=document.querySelector(".level-info-wrapper"),this.levelSwitcherBlock=this.levelInfoWrapper.querySelector(".level-switcher"),this.prevButton=document.getElementById("prev-button"),this.nextButton=document.getElementById("next-button"),this.menuButton=document.getElementById("menu-button"),this.resetButton=i({tag:"button",classNames:["reset-progress-button"],text:"Reset progress"}),this.buttons={prev:this.prevButton,next:this.nextButton,menu:this.menuButton,reset:this.resetButton},this.progressLine=i({tag:"div",classNames:["level-progress"]}),this.progressLine.append(i({tag:"div",classNames:["progress-line"]})),this.titleNode=i({tag:"h3",classNames:["level-title"]}),this.briefNode=i({tag:"h4",classNames:["brief"]}),this.syntaxNode=i({tag:"div",classNames:["syntax"]}),this.taskDescriptionNode=i({tag:"p",classNames:["task-description"]}),this.examplesNode=i({tag:"div",classNames:["examples"]}),this.example=i({tag:"p",classNames:["example"]}),this.examplesNode.append(i({tag:"h3",text:"Examples"}),this.example),this.levelsBlock=i({tag:"div",classNames:["levels"]}),this.levelMenu=this.createLevelMenu(e,this.levelsBlock,t)}updateView(e,t,s){const l=e.length;this.levelRequirementHeader.textContent=t.task,this.numberNode.textContent=String(t.levelNumber),this.levelsAmountNode.textContent=String(l),this.progressLine.style.width=t.levelNumber/l*100+"%",this.titleNode.textContent=t.description.levelTitle,this.briefNode.textContent=t.description.brief,this.syntaxNode.textContent=t.description.syntax,this.taskDescriptionNode.textContent=t.description.taskDescription,this.example.textContent="",this.example.insertAdjacentHTML("afterbegin",t.description.example),((e,t)=>{for(const t of e)t.classList.remove("active")})(this.levelsBlock.children),document.getElementById("number"+(t.levelNumber-1)).classList.add("active"),this.markCompletedLevels(s)}createLevelsList(e,t){return e.map(((e,s)=>{const l=["level"];t.includes(s)&&l.push("completed");const n=i({tag:"div",classNames:l,id:`number${s}`});return n.append(i({tag:"span",classNames:["checkmark"]}),i({tag:"output",classNames:["level-number"],text:`${e.levelNumber}`}),i({tag:"output",classNames:["level-name"],text:e.description.syntax})),n}))}createLevelInfoBlock(){const e=i({tag:"section",classNames:["level-info"]});return e.append(this.levelMenu,this.titleNode,this.briefNode,this.syntaxNode,this.taskDescriptionNode,this.examplesNode),e}createLevelMenu(e,t,s){const l=i({tag:"div",classNames:["level-info-wrapper","level-menu-wrapper"]}),n=i({tag:"section",classNames:["level-menu__header"]});return n.append(i({tag:"h2",text:"Choose a level"})),t.append(...this.createLevelsList(e,s)),l.append(n,t,this.resetButton),l}createView(){this.levelSwitcherBlock.append(this.progressLine),this.levelSwitcherBlock.after(this.createLevelInfoBlock()),this.levelInfoWrapper.after(this.levelMenu)}toggleLevelsMenu(){this.levelMenu.classList.toggle("active"),this.menuButton.classList.toggle("active")}markCompletedLevels(e){e.forEach((e=>{var t;return null===(t=this.levelsBlock.querySelector(`#number${e}`))||void 0===t?void 0:t.classList.add("completed")}))}gamePassed(e){this.levelRequirementHeader.textContent=e}resetView(){this.levelsBlock.querySelectorAll(".level").forEach((e=>{e.classList.remove("completed")}))}}var h;!function(e){e.CHANGELEVEL="changeLevel",e.ENTERSELECTOR="enterSelector",e.LEVELCOMPLETED="levelCompleted"}(h||(h={}));class m{constructor(){this.model=new n,this.view=new p(this.model.getLevels(),this.model.getCompletedLevels())}init(){this.view.createView(),this.changeLevel(this.model.getCurrentLevel()),this.bindListeners()}bindListeners(){this.view.buttons.menu.addEventListener("click",(()=>this.view.toggleLevelsMenu())),this.view.buttons.prev.addEventListener("click",(()=>this.changeLevel(this.model.prevLevel()))),this.view.buttons.next.addEventListener("click",(()=>this.changeLevel(this.model.nextLevel()))),this.view.buttons.reset.addEventListener("click",(()=>{this.resetGame(),this.changeLevel(this.model.resetProgress())})),this.view.levelsBlock.addEventListener("click",(e=>this.setLevel(e))),document.addEventListener(h.LEVELCOMPLETED,(()=>this.levelCompleted(this.model.levelCompleted()))),window.addEventListener("beforeunload",(()=>this.model.saveLevelOptions()))}resetGame(){this.view.toggleLevelsMenu(),this.view.resetView()}levelCompleted(e){"string"==typeof e?this.view.gamePassed(e):this.changeLevel(e)}changeLevel(e){this.view.updateView(this.model.getLevels(),e,this.model.getCompletedLevels()),document.dispatchEvent(new CustomEvent(h.CHANGELEVEL,{detail:{currentLevel:e}}))}setLevel(e){const t=o(e,"level");if(t){const e=this.model.changeLevel(Number(t.id.slice(6)));this.changeLevel(e),this.view.toggleLevelsMenu()}}}class d{constructor(e){this.exampleObjects=[],this.root=e}updateView(e){this.exampleObjects=this.getMarkupTree(e),this.root.replaceChildren(...this.exampleObjects)}getMarkupTree(e){const t=[];return e.forEach(((e,s)=>t.push(this.createExampleElement(e,s)))),t}createExampleElement(e,t){const s=e.className?[e.className,"exampleObject"]:["exampleObject"],l=i({tag:e.tag,classNames:s,id:e.id});return"number"==typeof t&&l.setAttribute("number",`${t}`),e.isCorrectAnswer&&l.classList.add("animated-item"),e.child&&l.append(this.createExampleElement(e.child,t+10)),l}}class v{constructor(){this.editorElement=document.querySelector(".editor-wrapper"),this.view=new d(document.querySelector(".items-container"))}init(){this.bindListeners()}bindListeners(){this.view.root.addEventListener("mouseover",(e=>c(e,"exampleObject"))),this.view.root.addEventListener("mouseout",(e=>c(e,"exampleObject"))),document.addEventListener(h.CHANGELEVEL,(e=>this.view.updateView(e.detail.currentLevel.elements))),document.addEventListener(h.ENTERSELECTOR,(e=>this.enterSelectorHandler(e)))}enterSelectorHandler(e){const t=e.detail.selector,s=Array.from(this.view.root.querySelectorAll(t));s.length>0?s.every((e=>Array.from(e.classList).includes("animated-item")))?this.animateWin(s):r(s,"shake"):a(this.editorElement,"shake")}animateWin(e,t=1e3){e.forEach((e=>e.classList.remove("animated-item"))),setTimeout((()=>{r(e,"swap",t),setTimeout((()=>document.dispatchEvent(new CustomEvent(h.LEVELCOMPLETED))),500)}),10)}}class u{constructor(e){this.root=e}updateView(e){this.root.replaceChildren(i({tag:"pre",text:'<div class="table">\n'}),...this.getMarkupElements(e),i({tag:"pre",text:"</div>\n"}))}getMarkupElements(e){return e.reduce(((e,t,s)=>(e.push(this.createMarkupElement(t,s)),e)),[])}createMarkupElement(e,t){const s=i({tag:"div",classNames:["html__markup-code"]});return"number"==typeof t&&s.setAttribute("number",`${t}`),s.append(i({tag:"pre",text:`<${e.tag}${e.className?` class=${e.className}`:""}${e.id?` id=${e.id}`:""}${e.child?"":"/"}>\n`})),e.child&&(s.append(this.createMarkupElement(e.child,t+10)),s.append(i({tag:"pre",text:`</${e.tag}>\n`}))),s}}class g{constructor(){this.view=new u(document.querySelector("code.html .html__markup-code"))}init(){this.bindListeners()}bindListeners(){this.view.root.addEventListener("mouseover",(e=>c(e,"html__markup-code"))),this.view.root.addEventListener("mouseout",(e=>c(e,"html__markup-code"))),document.addEventListener("changeLevel",(e=>this.view.updateView(e.detail.currentLevel.elements)))}}class L{constructor(e){this.root=e,this.CSSInput=i({tag:"div",classNames:["css-input"]}),this.CSSTextarea=i({tag:"textarea",id:"css-selector-textarea"}),this.CSSTextarea.setAttribute("cols","15"),this.CSSTextarea.setAttribute("rows","3"),this.CSSTextarea.setAttribute("placeholder","Type in a CSS Selector"),this.enterButton=i({tag:"button",classNames:["enter-button"],text:"ENTER"}),this.CSSInput.append(this.CSSTextarea,this.enterButton)}mount(){this.root.append(this.CSSInput)}updateView(){this.CSSTextarea.value=""}}class E{constructor(){this.view=new L(document.querySelector("code.css"))}init(){this.view.mount(),this.bindListeners()}bindListeners(){this.view.enterButton.addEventListener("mousedown",(()=>this.buttonHandler(this.view.enterButton))),this.view.CSSInput.addEventListener("keydown",(e=>{"Enter"===e.key&&(e.preventDefault(),this.buttonHandler(this.view.enterButton))})),document.addEventListener(h.CHANGELEVEL,(()=>{this.view.updateView()}))}buttonHandler(e){this.animateButton(e),document.dispatchEvent(new CustomEvent(h.ENTERSELECTOR,{detail:{selector:this.getInputData()}}))}getInputData(){return this.view.CSSTextarea.value}animateButton(e,t=200){e.classList.add("pressed"),setTimeout((()=>e.classList.remove("pressed")),t)}}(new class{constructor(){this.levelsBlock=new m,this.layoutExample=new v,this.htmlViewer=new g,this.cssEditor=new E}init(){this.layoutExample.init(),this.htmlViewer.init(),this.cssEditor.init(),this.levelsBlock.init()}}).init()})();